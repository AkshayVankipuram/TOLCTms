# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-03-06 22:40
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('instructor', models.CharField(max_length=30)),
                ('semester', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('name', models.CharField(max_length=10, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True)),
                ('start', models.DateTimeField(null=True)),
                ('end', models.DateTimeField(null=True)),
                ('skill_1_lvl', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('skill_2_lvl', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('skill_3_lvl', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('skill_4_lvl', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('grouped', models.BooleanField(default=False)),
                ('completed', models.BooleanField(default=False)),
                ('skill_1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='TMS.Skill')),
                ('skill_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='TMS.Skill')),
                ('skill_3', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='TMS.Skill')),
                ('skill_4', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='TMS.Skill')),
            ],
        ),
        migrations.CreateModel(
            name='TMSUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_1_lvl', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('skill_2_lvl', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('skill_3_lvl', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('reputation', models.PositiveIntegerField()),
                ('colocate_pref', models.BooleanField(default=False)),
                ('skill_1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='TMS.Skill')),
                ('skill_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='TMS.Skill')),
                ('skill_3', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='TMS.Skill')),
                ('tasks', models.ManyToManyField(related_name='_tmsuser_tasks_+', to='TMS.Task')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='students',
            field=models.ManyToManyField(related_name='courses', to='TMS.TMSUser'),
        ),
        migrations.AddField(
            model_name='course',
            name='tasks',
            field=models.ManyToManyField(related_name='_course_tasks_+', to='TMS.Task'),
        ),
    ]
